


* Revisar que estamos procesando todos los atributos:

    http://developer.android.com/reference/android/R.styleable.html

* Ver como poder procesar los android:id="@+id/myid" haciendo View.setId(id)

  http://stackoverflow.com/questions/1714297/android-view-setidint-id-programmatically-how-to-avoid-id-conflicts?lq=1

  Al parecer el View.findViewById via findViewTraversal(int id) recorre el árbol a pelo (en ViewGroup).
  Activity.findViewById acaba accediendo al método View.findViewById

  El problema es generar un id que no se pise con los generados por Android, en StackOverflow (link arriba) se menciona
  el método Level 17 generateViewId() http://developer.android.com/reference/android/view/View.html#generateViewId%28%29
  El código fuente de ese método podría copiarse para Level 18 aunque su implementación da pistas:
  http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/4.4.1_r1/android/view/View.java#View.generateViewId%28%29

  Probar en RadioButton o RelativeLayout

* Hacer un EditText probando de nuevo atributos definidos en TextView

* Hacer un custom View <a> y quizás un custom View <form>, el objetivo es hacer un navegador de layouts nativos
como páginas

    Utilizar el <a> por ejemplo en el ejemplo de control remoto

* Testear en un layout aparte KeyboardView

    http://developer.android.com/reference/android/inputmethodservice/Keyboard.html
    http://developer.android.com/reference/android/inputmethodservice/KeyboardView.html
    http://www.fampennings.nl/maarten/android/09keyboard/index.htm
    http://alvinalexander.com/java/jwarehouse/android/core/java/android/inputmethodservice/KeyboardView.java.shtml


* Ver como conseguir que un ListView obtenga sus entries y el layout de cada item desde el servidor

* Hacer una navegador autónomo de layouts, hacer ejemplo con eventos y sin eventos (sólo "links").

* Pensar en como soportar los atributos con Android level superior

* Pensar como modelar los drawable por ejemplo para definir bordes etc desde el servidor

* Probar re-arranque de actividad (volver a restaurar bien el setting)

* Pensar en eventos que puedan enviarse al servidor tipo GPS, giróscopo etc por ponerlo fácil aunque se puede hacer con UserEvents

* Hacer un map de eventos para hacer el binding de los ViewAdapter en vez de ifs

* Añadir más datos a enviar de MouseEvent y KeyEvent, en teoría debería ser configurable

* Probar el KeyEvent con un ejemplo de verdad http://www.mysamplecode.com/2012/06/android-edittext-enterkey-event-example.html

* Cargar imágenes remótamente

* Intentar agrupar los atributos de un mismo tipo que sólo admiten un método conjunto, por ej los paddingXXX
  se definen una de una sola vez con setPadding(int,int,int,int)

* Pensar si en inflar otros tipos de XML de resources

* Añadir licencia Apache a ItsNat Droid, archivo global y manifiesto en cada archivo

* Implementar con infinita paciencia los más atributos posibles:

  http://developer.android.com/reference/android/R.styleable.html

* Drag and drop events (hay métodos nativos para drag & drop)
